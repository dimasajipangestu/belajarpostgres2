from pysnmp.hlapi import *
from pysnmp import hlapi
import quicksnmp
import psycopg2
import sys


class get:
    def getdata(self, host, port=161):
        try:
            con = psycopg2.connect("host='localhost' dbname='testdb' user='pythonspot' password='Dimas98@srg'")
            cur = con.cursor()
            #cur.execute("CREATE TABLE snmptest(Id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, oid VARCHAR, location VARCHAR, uptime BIGINT)")

            errorIndication, errorStatus, errorIndex, varBinds = next(
                getCmd(SnmpEngine(),
                       CommunityData('public', mpModel=0),
                       UdpTransportTarget((host, port)),
                       ContextData(),
                       ObjectType(ObjectIdentity('SNMPv2-MIB', 'sysUpTime', 0)))
            )

            if errorIndication:
                print(errorIndication)
            elif errorStatus:
                print('%s at %s' % (errorStatus.prettyPrint(),
                                    errorIndex and varBinds[int(errorIndex) - 1][0] or '?'))
            else:
                for varBind in varBinds:
                    for x in varBind:
                        a = (' = '.join([x.prettyPrint() for x in varBind]))
                        sysuptime = long(x)

            errorIndication, errorStatus, errorIndex, varBinds = next(
                getCmd(SnmpEngine(),
                       CommunityData('public', mpModel=0),
                       UdpTransportTarget((host, port)),
                       ContextData(),
                       ObjectType(ObjectIdentity('SNMPv2-MIB', 'sysName', 0)))
            )

            if errorIndication:
                print(errorIndication)
            elif errorStatus:
                print('%s at %s' % (errorStatus.prettyPrint(),
                                    errorIndex and varBinds[int(errorIndex) - 1][0] or '?'))
            else:
                for varBind in varBinds:
                    for y in varBind:
                        a = (' = '.join([x.prettyPrint() for x in varBind]))
                        sysname = str(y)

            stmt = "INSERT INTO snmptest(oid, location, uptime) VALUES(%s,%s,%s)"
            cur.execute(stmt, (host+":"+str(port), sysname, sysuptime))
            #cur.execute("INSERT INTO snmptest(location, uptime) VALUES(?,?)")
            con.commit()
            con.close()
            print(host)
            print(sysname)
            print(sysuptime)
        except:
            print(host)
            print("timeout")

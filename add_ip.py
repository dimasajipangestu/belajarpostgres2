import psycopg2
from pysnmp.hlapi import *
from pysnmp import hlapi
import quicksnmp


def insertip(ip, name):
    con = psycopg2.connect("host='localhost' dbname='testdb' user='pythonspot' password='Dimas98@srg'")
    cur = con.cursor()

    stmt = "INSERT INTO hosttable(ip, name) VALUES(%s,%s)"
    cur.execute(stmt, (ip, name))

    con.commit()
    con.close()

def makedatabase():

    con = psycopg2.connect("host='localhost' dbname='testdb' user='pythonspot' password='Dimas98@srg'")
    cur = con.cursor()
    cur.execute("CREATE TABLE hosttable(Id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, ip VARCHAR, name VARCHAR)")
    con.commit()
    con.close()

def searchname(ip):
    errorIndication, errorStatus, errorIndex, varBinds = next(
        getCmd(SnmpEngine(),
               CommunityData('public', mpModel=0),
               UdpTransportTarget((ip, 161)),
               ContextData(),
               ObjectType(ObjectIdentity('SNMPv2-MIB', 'sysName', 0)))
    )

    if errorIndication:
        print(errorIndication)
        print("error "+ip)
        name = "unknown"
        return name
    elif errorStatus:
        print('%s at %s' % (errorStatus.prettyPrint(),
                            errorIndex and varBinds[int(errorIndex) - 1][0] or '?'))
        print("error "+ip)
        name = "unknown"
        return name
    else:
        for varBind in varBinds:
            for x in varBind:
                a = ' = '.join([x.prettyPrint() for x in varBind])
        return str(x)

def get_hostip():
    con = psycopg2.connect("host='localhost' dbname='testdb' user='pythonspot' password='Dimas98@srg'")
    cur = con.cursor()
    cur.execute("SELECT ip FROM hosttable")
    hostip = []

    while True:
        row = cur.fetchone()

        if row == None:
            return hostip
            break
        else:
            hostip.append(''.join(row))


for ip in get_hostip():
    errorIndication, errorStatus, errorIndex, varBinds = next(
        getCmd(SnmpEngine(),
               CommunityData('public', mpModel=0),
               UdpTransportTarget((ip, 161)),
               ContextData(),
               ObjectType(ObjectIdentity('SNMPv2-MIB', 'sysUpTime', 0)))
    )

    if errorIndication:
        print(errorIndication)
    elif errorStatus:
        print('%s at %s' % (errorStatus.prettyPrint(),
                            errorIndex and varBinds[int(errorIndex) - 1][0] or '?'))
    else:
        for varBind in varBinds:
            for x in varBind:
                a = (' = '.join([x.prettyPrint() for x in varBind]))
                sysuptime = x/100/60/60/24


    errorIndication, errorStatus, errorIndex, varBinds = next(
        getCmd(SnmpEngine(),
               CommunityData('public', mpModel=0),
               UdpTransportTarget((ip, 161)),
               ContextData(),
               ObjectType(ObjectIdentity('SNMPv2-MIB', 'sysName', 0)))
    )

    if errorIndication:
        print(errorIndication)
    elif errorStatus:
        print('%s at %s' % (errorStatus.prettyPrint(),
                            errorIndex and varBinds[int(errorIndex) - 1][0] or '?'))
    else:
        for varBind in varBinds:
            for y in varBind:
                a = (' = '.join([x.prettyPrint() for x in varBind]))
                sysname = y



    print(ip)
    print(sysname)
    print(sysuptime)